package ui;

import java.awt.Color;
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GraphicsEnvironment;
import java.awt.Image;
import java.awt.LayoutManager;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.JPanel;

import graphics.ImageUtil;

public class MenuPanel extends JPanel {
	private static final long serialVersionUID = 1L;
	
	public static Image BACKGROUND = null;
	public static Font FONT = null;
	
	static {
		try {
			BACKGROUND = ImageIO.read(new File("assets/led_pattern.jpg"));
			BACKGROUND = ImageUtil.color(BACKGROUND, new Color(28, 17, 0), 255);
			

			FONT = Font.createFont(Font.TRUETYPE_FONT, new File("assets/digital_bold.ttf"));
			GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
			ge.registerFont(FONT);
		} catch (IOException | FontFormatException e) {
			e.printStackTrace();
			System.exit(-1);
		}
	}
	
	public MenuPanel() {
		super();
		// TODO Auto-generated constructor stub
	}

	public MenuPanel(boolean isDoubleBuffered) {
		super(isDoubleBuffered);
		// TODO Auto-generated constructor stub
	}

	public MenuPanel(LayoutManager layout, boolean isDoubleBuffered) {
		super(layout, isDoubleBuffered);
		// TODO Auto-generated constructor stub
	}

	public MenuPanel(LayoutManager layout) {
		super(layout);
		// TODO Auto-generated constructor stub
	}

	@Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g.create();
        int tileWidth = BACKGROUND.getWidth(null);
        int tileHeight = BACKGROUND.getHeight(null);
        for (int y = 0; y < getHeight(); y += tileHeight) {
            for (int x = 0; x < getWidth(); x += tileWidth) {
                g2d.drawImage(BACKGROUND, x, y, this);
            }
        }
        g2d.dispose();
    }
	
}
