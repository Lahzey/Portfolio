package poopgame.gamelogic.systems;

import java.util.Collection;

import com.badlogic.gdx.InputAdapter;
import com.badlogic.gdx.physics.box2d.Body;
import com.badlogic.gdx.physics.box2d.BodyDef;
import com.badlogic.gdx.physics.box2d.BodyDef.BodyType;

import poopgame.gamelogic.PoopGame;
import poopgame.physics.BodyInfo;
import poopgame.physics.FixtureInfo;

import com.badlogic.gdx.physics.box2d.CircleShape;
import com.badlogic.gdx.physics.box2d.Fixture;
import com.badlogic.gdx.physics.box2d.FixtureDef;

public class MouseObject extends InputAdapter{

	
	private BodyDef bodyDef;
	private FixtureDef fixtureDef;
	
	private Body body;
	private FixtureInfo fixtureInfo;
	
	private PoopGame game;
	
	public MouseObject(PoopGame game){
		this.game = game;
		create();
	}
	
	@Override
	public boolean mouseMoved(int screenX, int screenY) {
		body.setTransform(game.renderingSystem.getWorldCoordinates(screenX, screenY), 0);
		return false;
	}
	
	public Collection<Fixture> getCurrentlyColliding(){
		return fixtureInfo.colliding.values();
	}

	private void create(){
		bodyDef = new BodyDef();
		bodyDef.type = BodyType.DynamicBody;
		fixtureDef = new FixtureDef();
		fixtureDef.isSensor = true;
		
		body = game.world.createBody(bodyDef);
		CircleShape shape = new CircleShape();
		shape.setRadius(0);
		fixtureDef.shape = shape;
		Fixture fixture = body.createFixture(fixtureDef);
		shape.dispose();
		
		
		BodyInfo bodyInfo = new BodyInfo(body);
		bodyInfo.mainFixture = fixture;
		body.setUserData(bodyInfo);
		
		fixtureInfo = new FixtureInfo(fixture);
		fixtureInfo.height = 0;
		fixtureInfo.width = 0;
		fixture.setUserData(fixtureInfo);
		
		game.sensors.add(fixture);
	}
}
