package poopgame.gamelogic.systems;

import com.badlogic.ashley.core.Entity;
import com.badlogic.ashley.core.EntitySystem;
import com.badlogic.ashley.core.Family;
import com.badlogic.ashley.utils.ImmutableArray;

import poopgame.gamelogic.components.UpdateComponent;
import poopgame.gamelogic.engine.LogicSystem;

public class UpdateSystem extends EntitySystem implements LogicSystem {

	private ImmutableArray<Entity> updateableEntites;

    private float accumulator = 0f;

	public UpdateSystem() {
		super(Family.all(UpdateComponent.class).get());
	}

    @Override
    public void update(float deltaTime) {
        super.update(deltaTime);
        float frameTime = Math.min(deltaTime, 0.25f);
        accumulator += frameTime;
        while (accumulator >= STEP_TIME) {
        	step();
        }
    }
    
    private void step() {
    	
    }
    
    

	@Override
	protected void processEntity(Entity entity, float deltaTime) {
		entity.getComponent(UpdateComponent.class).updateable.update(deltaTime);
	}

	@Override
	public Object storeState() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void loadState(Object state) {
		// TODO Auto-generated method stub
		
	}

}
