package poopgame.gamelogic.abilities.passive;

import com.badlogic.ashley.core.Entity;
import com.badlogic.gdx.physics.box2d.Body;
import com.badlogic.gdx.physics.box2d.Fixture;

import poopgame.gamelogic.GameEntity;
import poopgame.gamelogic.components.PlayerComponent;
import poopgame.gamelogic.engine.TimeEngine;
import poopgame.physics.BodyInfo;
import poopgame.physics.FixtureInfo;

public class NinjaPassive extends PassiveAbility {
	
	public static final String LAST_POOP_STAT_NAME = "lastPoop";

	@Override
	public void update(TimeEngine engine, Entity player, float deltaTime) {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public void onShoot(TimeEngine engine, Entity player, Entity poop) {
		// disable damage for last poop
		Entity lastPoop = engine.getEntityById(GameEntity.getStats(player).getStat(NinjaPassive.LAST_POOP_STAT_NAME, String.class));
		if (lastPoop != null) {
			GameEntity.getStats(lastPoop).setDamage(0f);
		}
		 // set poop id to stats
		GameEntity.getStats(player).setStat(LAST_POOP_STAT_NAME, GameEntity.getId(poop));
		
		// decrease poop size
		Body body = getBody(poop);
		FixtureInfo fixInfo = (FixtureInfo) ((BodyInfo) body.getUserData()).mainFixture.getUserData();
		for (Fixture colliding : fixInfo.colliding.values()) {
			Entity collidingEntity = ((BodyInfo) colliding.getBody().getUserData()).entity;
			if (collidingEntity.getComponent(PlayerComponent.class) != null) {
				getStats(collidingEntity).setHealth(getStats(collidingEntity).getHealth() - (DAMAGE_PER_SEC * delta));
			}
		}
	}

}